inh attr scope:Scope; 

---------------------------

-- LM

nt Main;

prod main: Main ::= ds:Dcls name:String
{
  local s:Scope = mkScope();
  s.vars = ds.vars;
  s.lex  = [];
  ds.scope = s;
}



nt Dcls;
attr scope occurs on Dcls;
attr vars occurs on Dcls;

prod dclsCons: Dcls ::= d:Dcl ds:Dcls
{
  local s:Scope = mkScope();
  local s2:Scope = mkScope();
  local i:Integer = 1;

  d.scope = this.scope;
  ds.scope = this.scope;
}

prod dclsNil: Dcls ::= 
{}




nt Dcl;

attr scope occurs on Dcl;

---------------------------


-- scope graphs library stuff

syn attr lex:[Scope];
syn attr vars:[Scope];

nt Scope;
attr lex occurs on Scope;
attr vars occurs on Scope;

prod mkScope: Scope ::= {}


---------------------------